			------------------------
 			 INTRODUCCIÓN FUNCIONES
			------------------------

** VER EL NÚMERO DE EMPLEADO Y SU APELLIDO PARA TODOS
** AQUELLOS QUE TENGAN EL MAYOR SALARIO DE LA EMPRESA.

SELECT EMP_NO, APELLIDO FROM EMPLE
WHERE SALARIO = (SELECT MAX (SALARIO) FROM EMPLE);



** SABER CUÁNTOS EMPLEADOS COBRAN EL MÁXIMO SALARIO DE LA EMPRESA.

SELECT COUNT(APELLIDO) "NÚMERO DE EMPLEADOS"
FROM EMPLE
WHERE SALARIO = (SELECT MAX (SALARIO) FROM EMPLE);

EN ESTE EJEMPLO HEMOS VISTO FUNCIONES (MAX & COUNT)
Y ADEMÁS HEMOS VISTO CÓMO UNA SUBCONSULTA NOS AYUDA
PARA OBTENER LOS RESULTADOS SIEMPRE.
TAMBIÉN HEMOS VISTO COMO UTILIZAR UN ALIAS DE COLUMNA.




LAS SUBCONSULTAS CO-RRELACIONADAS SON CONSULTAS QUE CONTIENEN UNA SUBCONSULTA

QUIERO SABER EL NÚMERO Y APELLIDO DE LOS EMPLEADOS
QUE COBRAN EL MÁXIMO SALARIO DE SU PROPIO DEPARTAMENTO


********************************************************
UPDATE EMPLE SET SALARIO = 3000
WHERE EMP_NO = 7934;
COMMIT;
********************************************************
ACTUALIZAMOS A MUÑOZ PARA QUE COBRE 3000 PAVOS TAMBIÉN
********************************************************


SELECT COUNT(APELLIDO) "NÚMERO DE EMPLEADOS"
FROM EMPLE
WHERE SALARIO = (SELECT MAX (SALARIO) FROM EMPLE
WHERE DEPT_NO = 20) AND DEPT_NO = 20;



SELECT EMP_NO, APELLIDO, SALARIO FROM EMPLE
WHERE SALARIO = (SELECT MAX (SALARIO) FROM EMPLE
WHERE DEPT_NO = 20) AND DEPT_NO = 20;


LO IMPORTANTE AQUÍ ES QUE EN ESTA CONSULTA ESTAMOS HABLANDO DE QUE COBREN
EL MÁXIMO DE SU DEPARTAMENTO, NO DE CUALQUIER DEPARTAMENTO.
POR ELSO EL DEPT_NO = 20 ESTÁ DENTRO DE LA SUBCONSULTA
PERO TAMBIÉN FUERA EN LA CONSULTA PRINCIPAL,
POR ESO FILTRABAMOS A MUÑOZ PORQUE NO ERA DEL DEPT_NO 20


v3.0 QUIERO QUE SALGAN LOS EMPLEADOS QUE COBREN
EL MÁXIMO SALARIO DE SU DEPT_NO INDEPENDIENTEMENTE DE CUAL SEA EL DEPT,
ES DECIR
QUIERO QUE SALGAN LOS QUE COBRAN MÁS DE TODOS LOS DEPARTAMENTOS
PERO COMPARANDOSE CON SU PROPIO DEPARTAMENTO



SELECT EMP_NO, APELLIDO, EMPLE.DEPT_NO
FROM EMPLE, DEPART
WHERE SALARIO = (SELECT MAX (SALARIO) FROM EMPLE WHERE
EMPLE.DEPT_NO = DEPART.DEPT_NO) AND EMPLE.DEPT_NO = DEPART.DEPT_NO;


-- FIJAOS QUE LO QUE CONSIGUE DANI AQUÍ ES QUE EL
-- DEPT_NO DE LA SUBCONSULTA (QUE CORRESPONDE A EMPLE
-- SIENDO EMPLE LA TABLA DE LA SUBCONSULTA) SEA IGUAL
-- A EL DEPT_NO DE LA CONSULTA PRINCIPAL
-- (DEPART.DEPT_NO) SIGUIENDO LA FILOSOFÍA DE LA V3.0

DONDE VEO QUE LA SUBCONSULTA TRATA AL DEPT_NO 20
Y LA PRINCIPAL TAMBIÉN TRATA EL MISMO DEPT_NO
AL EJECUTAR CONSIGO LOS RESULTADOS BUENOS:




MEJORA v4.0:


SE PUEDE CONSEGUIR LO MISMO SIN USAR DOS TABLAS, TPOR TANTO IRA MAS RAPIDO:

SELECT EMP_NO, APELLIDO, EMPLE.DEPT_NO, SALARIO
FROM EMPLE, DEPART
WHERE SALARIO = (SELECT MAX (SALARIO) FROM EMPLE WHERE
EMPLE.DEPT_NO = DEPART.DEPT_NO);


NECESITO QUE EMPLE.DEPT_NO = DEPT_NO EL SEGUNDO
DEPT_NO SE REFIERA AL DEPT_NO DE LA TABLA EMPLE DE LA CONSULTA EXTERIOR, PERO NO LA PUEDO LLAMAR EMPLE! PORQUE SE CONFUNDE CON LA DE LA SUBCONSULTA.
SOLUCIÓN: USAR ALIAS DE TABLA:

SELECT EMP_NO, APELLIDO, DEPT_NO, SALARIO
FROM EMPLE E1
WHERE SALARIO = (
    SELECT MAX(SALARIO)
    FROM EMPLE E2
    WHERE E1.DEPT_NO = E2.DEPT_NO
)
ORDER BY DEPT_NO;

SELECT EMP_NO, APELLIDO, DEPT_NO, SALARIO
FROM EMPLE E1
WHERE SALARIO = (SELECT MAX(SALARIO) FROM EMPLE WHERE EMPLE.DEPT_NO = E1.DEPT_NO)
ORDER BY DEPT_NO;